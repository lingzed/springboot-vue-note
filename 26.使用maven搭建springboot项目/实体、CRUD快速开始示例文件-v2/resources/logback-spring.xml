<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="10 minutes">
    <!-- 将日志输出到控制台，并自定义日志的格式 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d{yyyy-MM-dd HH:mm:ss,GMT+8} [%t] [%p][%c][%M][%L] -> %m%n</pattern>
        </layout>
    </appender>

    <!-- 从spring的配置文件中引入 project.folder 和 log.root.level 的值 -->
    <springProperty scope="context" name="log.path" source="project.folder"/>
    <springProperty scope="context" name="log.root.level" source="log.root.level"/>

    <!-- 定义日志文件夹名称和日志文件名，根据实际情况更改 -->
    <property name="LOG_FOLDER" value="logs"/>
    <property name="LOG_FILE_NAME" value="web.log"/>

    <!-- 将日志输出到文件，并实现日志文件的滚动管理 -->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 定义当前日志文件的路径 -->
        <file>${log.path}/${LOG_FOLDER}/${LOG_FILE_NAME}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 设置日志文件的命名规则和滚动策略：按日期和索引序号 -->
            <FileNamePattern>${log.path}/${LOG_FOLDER}/${LOG_FILE_NAME}.%d{yyyyMMdd}.%i</FileNamePattern>
            <!-- 应用程序启动时清理历史记录 -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <!-- 设置滚动触发策略，按文件大小和时间滚动 -->
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- 单个日志文件的最大大小限制 -->
                <MaxFileSize>20MB</MaxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- 保留历史日志的最大天数 -->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <!-- 设置日志编码和输出格式 -->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss,GMT+8} [%t] [%p][%c][%M][%L] -> %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 配置文件的追加模式：是否覆盖旧的日志 -->
        <append>false</append>
        <!-- 设置审慎模式，适用于多实例环境 -->
        <prudent>false</prudent>
    </appender>

    <root level="${log.root.level}">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="file"/>
    </root>
</configuration>